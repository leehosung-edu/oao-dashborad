# wien0128 CD

name: wien0128 CD

on:
  workflow_run:
    workflows: ["wien0128 CI"]
    types:
      - completed
    branches: [main]

permissions:
  contents: read

jobs:
  # Docker 이미지 빌드 후 Docker Hub에 Push
  build-docker-image:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      # 레포지토리 코드 체크아웃 v4
      - uses: actions/checkout@v4

      # 파이썬 버전 가져오기
      - name: Get Python Version
        id: get_version
        run: |
          python_version=$(python scripts/get_python_version.py | jq -r .full)
          echo "version=${python_version}" >> $GITHUB_OUTPUT

      # 의존성 설치
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oao_cicd_action .

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      # Docker Hub에 이미지 Push
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/oao_cicd_action

  # Push된 이미지 EC2에서 Pull 후 EC2에 배포
  deploy-to-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      # 최신 이미지 Pull
      - name: Pull Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/oao_cicd_action

      # 기존 컨테이너 중지
      - name: Stop Docker contatiner
        run: |
          docker stop oao_cicd_action || true
          docker rm oao_cicd_action || true

      # 최신 이미지 컨테이너화 후 실행
      - name: Run new contatiner
        run: docker run -d --name oao_cicd_action -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/oao_cicd_action

      # 미사용 이미지 정리
      - name: Remove old contatiner
        run: docker system prune -f
